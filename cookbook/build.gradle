plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

def major = 1
def minor = 1
def patch = 0
def build = 0

group = 'com.sababado.rolo'
version = "$major.$minor.$patch.$build"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode major.toInteger() * 10000000 + minor.toInteger() * 100000 + patch.toInteger() * 1000 + build.toInteger()
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // auth
    implementation 'com.google.firebase:firebase-auth:20.0.2'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    // Location
    implementation 'com.google.android.gms:play-services-location:17.1.0'

    def preference_version = "1.1.1"
    // Kotlin
    implementation "androidx.preference:preference-ktx:$preference_version"
    implementation "androidx.preference:preference:$preference_version"
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = group
                artifactId = 'cookbook'
                version = version
            }
        }
    }
}